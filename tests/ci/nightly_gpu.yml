# gpu_unit_test.yml
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#
#
# NOTE: start with cpu to make sure everything still works
#
# use variable group name
variables:
 'test': 'tests/ci/run_pytest.py'
- name  : 'maxnodes'
  value : 4
#- name  : 'rg'
#  value : 'recommender'
#- name  : 'wsname'
#  value : 'RecoWS'
- name  : 'reponame'
  value : 'Recommenders'
- name  : 'branch'
  value : 'azure-pipelines-bz'
# GPU
#- name  : 'vmsize'
#  value : 'STANDARD_NC6'
# CPU
- name  : 'vmsize'
  value : 'STANDARD_D3_V2'
- name  : 'dockerproc'
  value : '--cpu'

jobs:
- job : A
  pool:
    vmImage: 'ubuntu-16.04'

  variables:
  - group: AzureKeyVaultSecrets
  - name  : 'testfolder'
    value : './tests/smoke'
  - name  : 'testmarkers'
    value : '"smoke and not spark and not gpu"'
  - name  : 'junitxml'
    value : 3
  - name  : 'clustername'
    value : 'reco-nightly-cpu'
  - name  : 'expname'
    value : 'nightly_smoke_cpu'

  trigger: none

  pr: none
#- staging 
#- master

  steps:

  - bash: echo This is a test $(test)
  - template: env-setup.yml # template reference
# add conda activate here
- job : b

  variables:
  - group: AzureKeyVaultSecrets
  - name  : 'testfolder'
    value : './tests/integration'
  - name  : 'testmarkers'
    value : '"integration and not spark and not gpu"'
  - name  : 'junitxml'
    value : 3
  - name  : 'clustername'
    value : 'reco-nightly-cpu'
  - name  : 'expname'
    value : 'nightly_integration_cpu'
     trigger: none

  pr: none
#- staging 
#- master

  steps:

  - bash: echo This is a test $(test)
  - template: env-setup.yml # template reference